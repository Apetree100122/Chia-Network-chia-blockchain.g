; This is a PARENT_MORPHER for use with covenant_layer.clsp

; Is is used to prove that the parent was a singleton -> ownership_layer (w/ covenant_layer in TP) puzzle stack
(mod
  (
    ; curried first - a bunch of info to create a singleton -> ownership layer puzzle stack
    COVENANT_MOD_HASH
    OWNERSHIP_LAYER_MOD_HASH
    ADAPTER_MOD_HASH
    SINGLETON_MOD_HASH
    SINGLETON_LAUNCHER_HASH
    TP_HASH
    ; curried second
    SELF_HASH  ; tree hash of all the other hashes above
    COVENANT_INITIAL_PUZZLE_HASH ; Truth
    previous_inner_puzhash  ; Truth
    previous_metadata_hash
    my_singleton_id  ; no need to commit to this, our parent is guaranteed to be a singleton with the same ID as ours
  )

  (include curry.clib)

  (defconstant ONE 1)

  (curry_hashes SINGLETON_MOD_HASH
    (sha256 TWO
      (sha256 ONE SINGLETON_MOD_HASH)
      (sha256 TWO
        (sha256 ONE my_singleton_id)
        (sha256 ONE SINGLETON_LAUNCHER_HASH)
      )
    )
    (curry_hashes OWNERSHIP_LAYER_MOD_HASH
      (sha256 ONE OWNERSHIP_LAYER_MOD_HASH)
      previous_metadata_hash
      (curry_hashes ADAPTER_MOD_HASH
        (curry_hashes COVENANT_MOD_HASH
          (sha256 ONE COVENANT_INITIAL_PUZZLE_HASH)
          (curry_hashes SELF_HASH
            (sha256 ONE SELF_HASH)
          )
          TP_HASH
        )
      )
      (sha256 ONE (curry_hashes ADAPTER_MOD_HASH
        (curry_hashes COVENANT_MOD_HASH
          (sha256 ONE COVENANT_INITIAL_PUZZLE_HASH)
          (curry_hashes SELF_HASH
            (sha256 ONE SELF_HASH)
          )
          TP_HASH
        )
      ))
      previous_inner_puzhash
    )
  )
)