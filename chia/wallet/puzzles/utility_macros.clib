(
  (defmacro assert items
      (if (r items)
          (list if (f items) (c assert (r items)) (q . (x)))
          (f items)
      )
  )

  (defmacro and ARGS
   (if ARGS
       (qq (if (unquote (f ARGS))
           (unquote (c and (r ARGS)))
           ()
           ))
       1)
   )

   (defmacro or ARGS
      (if ARGS
          (qq (if (unquote (f ARGS))
              1
              (unquote (c or (r ARGS)))
          ))
      0)
  )

  ; take two lists and merge them into one
  (defun merge_list (list_a list_b)
    (if list_a
      (c (f list_a) (merge_list (r list_a) list_b))
      list_b
    )
  )

  (defun in (atom list_a)
    (if list_a
        (i (= atom (f list_a))
          1
          (in atom (r list_a))
        )
        ()
    )
  )
)